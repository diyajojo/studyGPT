{
  "important_topics": {
    "mod4": [
      "Second Normal Form (2NF)",
      "Minimal Cover",
      "First Normal Form (1NF)",
      "Equivalence of Functional Dependencies",
      "Third Normal Form (3NF)"
    ],
    "mod2": [
      "Introduction to Relational Algebra",
      "Important SQL Data Types",
      "Introduction to SQL",
      "Data Definition Language (DDL)",
      "Table Definitions and Operations: CREATE, DROP, ALTER, INSERT, DELETE, UPDATE"
    ],
    "mod1": [
      "Characteristics of DB system",
      "Database Languages",
      "Database architectures and classification",
      "Important data types",
      "DDL, Table definitions and operations"
    ],
    "mod3": [
      "Review of terms: physical and logical records, blocking factor",
      "SQL DML",
      "Pinned and unpinned organization",
      "Aggregation and grouping",
      "Triggers, SQL data types"
    ],
    "mod5": [
      "Main characteristics of Key-value DB",
      "Locking",
      "Strict 2PL",
      "Recoverable and cascade-less schedules",
      "Concurrent and Serializable Schedules"
    ]
  },
  "important_qna": {
    "mod4": [
      {
        "question": "What are the different anomalies in designing a database?",
        "answer": "The different anomalies in designing a database include update anomalies, deletion anomalies, and insertion anomalies. These anomalies can lead to inconsistency, redundancy, and loss of data."
      },
      {
        "question": "What is the idea behind normalization in database design?",
        "answer": "Normalization is the process of efficiently organizing data in a database. It involves dividing a database into two or more tables and defining relationships between the tables to eliminate redundancy and dependency."
      },
      {
        "question": "What are the four informal guidelines that may be used as measures to determine the quality of relation schema design?",
        "answer": "The four informal guidelines are: (1) Making sure that the semantics of the attributes is clear in the schema, (2) Reducing the redundant information in tuples, (3) Reducing the NULL values in tuples, (4) Disallowing the possibility of generating spurious tuples."
      },
      {
        "question": "What are the different normal forms in database normalization?",
        "answer": "The different normal forms in database normalization are First Normal Form (1NF), Second Normal Form (2NF), Third Normal Form (3NF), and Boyce Codd Normal Form (BCNF). Each normal form has a set of rules that a database must meet to comply with it."
      },
      {
        "question": "What is the purpose of algorithms for checking Lossless Join and Dependency Preserving properties in a database?",
        "answer": "The purpose of these algorithms is to ensure the integrity of data in the database. A lossless join property ensures that the splicing of data does not result in the loss of data. Dependency preserving property ensures that the functional dependencies are preserved when decomposing a relation, which makes it easier to enforce the constraints."
      }
    ],
    "mod2": [
      {
        "question": "What is the structure of Relational Databases?",
        "answer": "A relational database is structured as a collection of tables (relations) which are made up of rows (tuples) representing real world entities and their related values. Each table has a column header (attribute)."
      },
      {
        "question": "What is Relational Algebra and what are its operations?",
        "answer": "Relational algebra is a set of operations for manipulating relational databases. Its operations include select, project, Cartesian product, and join (equi-join, natural join)."
      },
      {
        "question": "What operations are included in Data Definition Language (DDL)?",
        "answer": "Data Definition Language (DDL) includes operations such as CREATE (to create a new table), DROP (to delete a table), ALTER (to modify existing table structure), INSERT (to add new data), DELETE (to remove data), and UPDATE (to modify existing data)."
      },
      {
        "question": "What is SQL and what are its important data types?",
        "answer": "SQL (Structured Query Language) is a programming language used to manage and manipulate relational databases. Important data types in SQL include INTEGER, CHAR, VARCHAR, BOOLEAN, DATE, and TIMESTAMP among others."
      },
      {
        "question": "What is the process of synthesizing an ER diagram to a relational schema?",
        "answer": "Synthesizing an ER (Entity-Relationship) diagram to a relational schema involves representing the entities as tables, the relationships as foreign keys, and the attributes as columns within the tables."
      }
    ],
    "mod1": [
      {
        "question": "What is a Database Management System (DBMS) and what are its implicit properties?",
        "answer": "A Database Management System (DBMS) is a system that manages and controls access to the database. It has the following implicit properties: It represents some aspect of the real world, often referred to as the miniworld or universe of discourse (UoD), and changes to the miniworld are reflected in the database. A DBMS is a logically coherent collection of data with inherent meaning. It is designed, built, and populated with data for a specific purpose, with an intended group of users and preconceived applications."
      },
      {
        "question": "What does the ER model in DBMS represent?",
        "answer": "The ER model in DBMS represents the conceptual view of the database. It includes basic concepts such as entity sets, attributes, and notations. It also represents relationships and constraints like cardinality and participation."
      },
      {
        "question": "What is the significance of the relational model in DBMS?",
        "answer": "The relational model is significant in DBMS as it provides the structure of relational databases, including integrity constraints. It also assists in synthesizing ER diagrams to relational schemas. It introduces relational algebra, which includes select, project, cartesian product operations, and different types of joins."
      },
      {
        "question": "What is SQL DML and what are its functions?",
        "answer": "SQL DML (Data Manipulation Language) is a subset of SQL used for manipulating data present in the database. It includes SQL queries on single and multiple tables, nested queries, aggregation and grouping, views, assertions, and triggers. It also defines SQL data types."
      },
      {
        "question": "What is Physical Data Organization in DBMS?",
        "answer": "Physical Data Organization in DBMS refers to the physical storage of data in the database. It includes concepts like physical and logical records, blocking factor, pinned and unpinned organization, heap files, and indexing. It is a crucial aspect of DBMS as it impacts the performance of the system."
      }
    ],
    "mod3": [
      {
        "question": "What is SQL DML?",
        "answer": "SQL DML (Data Manipulation Language) provides the ability to query information from the database and to insert tuples into, delete tuples from, and modify tuples in the database."
      },
      {
        "question": "What is meant by physical and logical records in the context of Physical Data Organization?",
        "answer": "Physical and logical records refer to the types of data storage in a database. A physical record is the amount of data accessed in one I/O operation, while a logical record is a collection of data about a specific entity."
      },
      {
        "question": "What are Triggers in SQL?",
        "answer": "Triggers in SQL are a type of stored procedure that automatically execute or fire when a specified database event occurs like insert, update, or delete."
      },
      {
        "question": "What is the concept of Aggregation and Grouping in SQL?",
        "answer": "Aggregation in SQL refers to the process of performing operations on a dataset to yield a single consolidating result. Grouping is a concept where selected rows are arranged into groups based on common values in specified columns."
      },
      {
        "question": "What are B-Trees and B+Trees in the context of database indexing?",
        "answer": "B-Trees and B+Trees are data structures used in databases for indexing. They organize data for efficient insertion, deletion, and search operations. B+Trees are an extension of B-Trees that allows for efficient disk I/O operations."
      }
    ],
    "mod5": [
      {
        "question": "What is the significance of concurrency control and recovery in transaction processing?",
        "answer": "Concurrency control is crucial in transaction processing as it ensures that database operations occurring concurrently do not interfere with each other, maintaining the integrity of data. Recovery, on the other hand, is necessary to bring the database back to a consistent state in case of a failure during a transaction."
      },
      {
        "question": "What are the desirable properties of transactions?",
        "answer": "The desirable properties of transactions include Atomicity (all or none of the transaction completes), Consistency (the database remains in a consistent state before and after the transaction), Isolation (each transaction is executed in isolation from others), and Durability (effects of completed transactions are permanent)."
      },
      {
        "question": "What is two-phase locking and how does it ensure serializability?",
        "answer": "Two-phase locking (2PL) is a protocol that ensures conflict serializability of transactions. It has two phases, the growing phase where locks are acquired and no lock is released, and the shrinking phase where locks are released and no new locks are acquired. This protocol ensures that no two transactions conflict, thereby ensuring serializability."
      },
      {
        "question": "What is the concept of deferred database modification and how does it aid in recovery?",
        "answer": "Deferred database modification is a technique where changes of a transaction to a database are not immediately applied, but saved in a log. The actual changes to the database are deferred until the transaction reaches its commit point. In case of a failure, the system can recover by ignoring those transactions that were not committed, thus maintaining the database's consistency."
      },
      {
        "question": "What are the main characteristics of Key-value DB and Graph DB?",
        "answer": "Key-value databases store data as a collection of key-value pairs where the key serves as a unique identifier. They are highly scalable and offer fast data access. Graph databases, on the other hand, use graph structures to represent and store data. They excel in managing data where relationships between entities are as important as the entities themselves."
      }
    ]
  },
  "flashcards": {
    "mod3": [
      {
        "question": "What is SQL DML?",
        "answer": "SQL DML (Data Manipulation Language) provides the ability to query information from the database and to insert tuples into, delete tuples from, and modify tuples in the database."
      },
      {
        "question": "What is a Nested query?",
        "answer": "Nested queries are SQL queries where the inner query is evaluated for each row processed by the outer query. They can be correlated (where the inner query depends on the outer query) and non-correlated (where the inner query is independent)."
      },
      {
        "question": "What is Aggregation and grouping in SQL?",
        "answer": "Aggregation in SQL is the process of combining things. It's used with the GROUP BY clause in SQL, where it helps bundle selected rows into groups. Aggregation functions include AVG, COUNT, SUM, MAX, MIN etc."
      },
      {
        "question": "What are Triggers in SQL?",
        "answer": "Triggers are special procedures that are automatically executed when a specific event occurs in the database. They are used to maintain the integrity of the data and are invoked automatically when a particular action (insert, delete, or update) occurs on a table."
      },
      {
        "question": "What is Physical Data Organization?",
        "answer": "Physical Data Organization refers to the physical storage of the data in the database. It includes concepts like physical and logical records, blocking factor, pinned and unpinned organization, heap files, indexing, single level indices, multi-level-indices, B-Trees and B+Trees, Extendible Hashing, and Indexing on multiple keys – grid files."
      }
    ],
    "mod5": [
      {
        "question": "What is a transaction in the context of databases?",
        "answer": "A transaction in a database context is a single unit of work that is performed within a database management system (or similar system) against a database, and treated in a coherent and reliable way independent of other transactions."
      },
      {
        "question": "What is concurrency control in databases?",
        "answer": "Concurrency control in databases is the process of managing simultaneous operations without conflicting with each another. It ensures the correctness of the database state even when many users are accessing and altering the database simultaneously."
      },
      {
        "question": "Describe the concept of recoverable and cascade-less schedules in databases.",
        "answer": "Recoverable schedules are those where transactions commit only after all other transactions that they depend on have committed. Cascade-less schedules prevent a transaction from accessing an item that has been modified by an uncommitted transaction, avoiding cascading aborts."
      },
      {
        "question": "What is NoSQL and what are its key characteristics?",
        "answer": "NoSQL is a type of database management system that does not use the standard relational database model. Its key characteristics include being schema-less, supporting scalability, and handling a variety of data models including key-value, document, wide-column, and graph formats."
      },
      {
        "question": "What are the main types of NoSQL databases and give examples for each.",
        "answer": "The main types of NoSQL databases are: 1. Key-Value Stores such as Redis and Amazon DynamoDB. 2. Document Stores such as MongoDB and Couchbase. 3. Wide-Column Stores such as Apache Cassandra and Google Bigtable. 4. Graph Databases such as Neo4j and Amazon Neptune."
      }
    ],
    "mod2": [
      {
        "question": "What is the structure of relational databases?",
        "answer": "The structure of relational databases is composed of relations (also known as tables), where each relation has a fixed number of named columns and variable number of rows. Each row represents a real-world entity or relationship."
      },
      {
        "question": "What are the main components of a relational database?",
        "answer": "The main components of a relational database include: Domain, Tuples (rows), Attributes (Columns), Keys, and Relations (Tables)."
      },
      {
        "question": "What is meant by synthesizing an ER diagram to a relational schema?",
        "answer": "Synthesizing an ER diagram to a relational schema involves mapping entity types, relationship types, and attributes in the ER model to tables, columns, and keys in a relational database schema."
      },
      {
        "question": "What are the different types of operations in relational algebra?",
        "answer": "In relational algebra, the types of operations include: select, project, cartesian product, and join operations including Equi-join and Natural join."
      },
      {
        "question": "What are some of the operations in SQL and what do they do?",
        "answer": "In SQL, there are several operations including CREATE to create a new table, DROP to delete a table, ALTER to modify an existing table, INSERT to add new data, DELETE to remove data, and UPDATE to modify existing data."
      }
    ],
    "mod4": [
      {
        "question": "What are the different anomalies in designing a database?",
        "answer": "The different anomalies in designing a database are insertion, deletion, and update anomalies."
      },
      {
        "question": "What is functional dependency in the context of database normalization?",
        "answer": "A functional dependency in database normalization is a constraint between two sets of attributes, such that the value of one attribute determines the value of another attribute."
      },
      {
        "question": "What are the '1NF', '2NF', '3NF', and 'BCNF' in database normalization?",
        "answer": "'1NF', '2NF', '3NF', and 'BCNF' refer to the first, second, third, and Boyce-Codd normal forms. These are rules designed to aid in the elimination of redundant data, which in turn helps to prevent data anomalies."
      },
      {
        "question": "What is a lossless join in the context of database normalization?",
        "answer": "A lossless join ensures that the splicing of a database into two does not result in the loss of data. It ensures the reliable projection of data across multiple tables."
      },
      {
        "question": "What does it mean to preserve dependencies in a database?",
        "answer": "Preserving dependencies in a database means ensuring that functional dependencies are maintained during the process of decomposition. It ensures that the original functional dependencies can still be determined from the decomposed relations."
      }
    ],
    "mod1": [
      {
        "question": "What are the characteristics of a DB system?",
        "answer": "A DB system represents some aspect of the real world, it is a logically coherent collection of data with some inherent meaning, it is designed, built, and populated with data for a specific purpose that has an intended group of users and some preconceived applications."
      },
      {
        "question": "What is the difference between structured, semi-structured and unstructured data?",
        "answer": "Structured data is highly organized and resides in a fixed format. Semi-structured data does not fit into a strict relational structure but has some organizational properties. Unstructured data is data without a predefined format or organization, often requiring processing to extract meaningful insights."
      },
      {
        "question": "What is the Three-Schema-architecture in DBMS?",
        "answer": "The Three-Schema Architecture is a database architecture which separates the conceptual, external, and internal schemas, promoting data abstraction and insulation between programs and data."
      },
      {
        "question": "What are the basic concepts of the ER model?",
        "answer": "The basic concepts of the ER model include entities, attributes, and relationships. Entities are objects or concepts that are distinguishable from others. Attributes are properties that help define the characteristics of an entity. Relationships are associations between entities."
      },
      {
        "question": "What are weak entities and relationships of degree 3 in the ER model?",
        "answer": "Weak entities in the ER model are entities that depend on another entity for their existence. Relationships of degree 3, also known as ternary relationships, are associations among three entities."
      }
    ]
  }
}