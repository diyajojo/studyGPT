{
  "important_topics": {
    "mod1": [
      "Aggregation and Grouping",
      "Structured, Semi-structured and Unstructured Data",
      "Relationships and Constraints",
      "Cardinality, Participation, Notations",
      "Weak Entities, Relationships of Degree 3"
    ],
    "mod2": [
      "Query Examples",
      "Important Data Types",
      "Relational Algebra: Join - Equi-Join, Natural Join",
      "Synthesizing ER Diagram to Relational Schema",
      "Structure of Relational Databases"
    ],
    "mod3": [
      "Review of terms: physical and logical records, blocking factor, pinned and unpinned organization",
      "B-Trees and B+Trees",
      "SQL queries on single and multiple tables",
      "Indexing on multiple keys – grid files",
      "Triggers, SQL data types"
    ],
    "mod4": [
      "Functional Dependency",
      "Different Anomalies in Database Design",
      "Closures and Their Computation",
      "Second Normal Form (2NF)",
      "Minimal Cover"
    ],
    "mod5": [
      "Deferred database modification (serial schedule)",
      "Deferred database modification (concurrent schedule)",
      "Desirable Properties of transactions",
      "System Log",
      "Concurrent and Serializable Schedules"
    ]
  },
  "important_qna": {
    "mod1": [
      {
        "question": "What are the characteristics of a Database system?",
        "answer": "A database system is characterized by its ability to manage large amounts of data efficiently, support concurrent access by multiple users, provide robust data integrity and security measures, and enable data to be recovered in case of failures."
      },
      {
        "question": "What is the difference between structured, semi-structured, and unstructured data?",
        "answer": "Structured data is highly organized and can be easily searched in a database. Semi-structured data has some level of organization but not as much as structured data; it may include tags, markers, or other keys that identify elements of the data. Unstructured data lacks a pre-defined model or organization, making it more complex to analyze and process."
      },
      {
        "question": "What is the three-schema architecture in DBMS?",
        "answer": "The three-schema architecture separates the conceptual, external, and internal schemas. The conceptual schema defines all database entities, relationships, and constraints. The external schema defines various user views of the database. The internal schema outlines the physical storage methods and data access paths."
      },
      {
        "question": "What are the basic concepts of the ER model?",
        "answer": "The ER model's basic concepts include entities, attributes, and relationships. Entities represent real-world objects or concepts, attributes define properties of entities, and relationships depict the associations between entities."
      },
      {
        "question": "What is the role of cardinality in the ER model?",
        "answer": "Cardinality in the ER model defines the numerical relationship between entities in a relationship set. It indicates the maximum and minimum number of instances that an entity can participate in a relationship."
      }
    ],
    "mod2": [
      {
        "question": "What is the structure of relational databases in the relational model?",
        "answer": "The structure of relational databases in the relational model is based on the concept of tables or relations. Each table consists of rows and columns, where each row represents a record, and each column represents an attribute or field of the record."
      },
      {
        "question": "What are integrity constraints in the context of relational databases?",
        "answer": "Integrity constraints are rules that help ensure the accuracy and consistency of data in a relational database. They define the permissible states of the database, and the database management system will not allow operations that violate these constraints."
      },
      {
        "question": "What is the process of synthesizing an ER diagram to a relational schema?",
        "answer": "Synthesizing an ER diagram to a relational schema involves converting the entities, attributes, and relationships depicted in the ER diagram into tables, fields, and connections in a relational schema."
      },
      {
        "question": "What are the basic operations of relational algebra?",
        "answer": "The basic operations of relational algebra include select, project, Cartesian product, and join operations such as equi-join and natural join."
      },
      {
        "question": "What is SQL and what are its important data types?",
        "answer": "SQL, or Structured Query Language, is a standard language for managing and manipulating relational databases. Its important data types include numeric types, date and time types, string (character and byte) types, and Boolean."
      }
    ],
    "mod3": [
      {
        "question": "What are SQL DML and SQL queries on single and multiple tables?",
        "answer": "SQL DML (Data Manipulation Language) includes commands such as SELECT, INSERT, UPDATE, and DELETE, which are used to retrieve and manipulate data in a database. SQL queries on single or multiple tables are used to extract specific data from one or more tables within a database."
      },
      {
        "question": "What are nested queries and how are they classified?",
        "answer": "Nested queries, also known as subqueries, are SQL queries embedded within another SQL query. They can be classified as correlated (where the inner query depends on the outer query for its values) and non-correlated (where the inner query can run independently of the outer query)."
      },
      {
        "question": "What is the concept of aggregation and grouping in SQL?",
        "answer": "Aggregation in SQL refers to using aggregate functions like COUNT, SUM, AVG, MAX, or MIN to perform a calculation on a set of values to return a single scalar value. Grouping is a way of segregating data into different groups using the GROUP BY clause, often used with aggregate functions."
      },
      {
        "question": "What are triggers in SQL and can you provide an example?",
        "answer": "Triggers in SQL are special types of stored procedures that are automatically executed or fired when a specified database event occurs. For example, a trigger could be created to update a log table every time a record is updated in a particular table."
      },
      {
        "question": "What is the difference between physical and logical records in databases?",
        "answer": "Physical records are the actual records stored on a disk, while logical records represent information about a specific entity as understood by the user, and it may be spread across several physical records."
      }
    ],
    "mod4": [
      {
        "question": "What are the different anomalies in designing a database?",
        "answer": "There are three main types of anomalies in designing a database. These are insertion, update, and deletion anomalies. Insertion anomalies occur when certain attributes cannot be inserted into the database without the presence of other attributes. Update anomalies occur when some instances of a piece of data are updated and others are not. Deletion anomalies occur when certain attributes are lost because of the deletion of other attributes."
      },
      {
        "question": "What is normalization in the context of databases?",
        "answer": "Normalization is a process to eliminate data redundancy and undesirable characteristics like Insertion, Update and Deletion Anomalies. It is used to create, design, and modify relational databases. Normalization divides larger tables into smaller tables and links them using relationships."
      },
      {
        "question": "What is functional dependency in a database?",
        "answer": "Functional dependency is a constraint between two sets of attributes in a database from a relation. If attribute B is functionally dependent on attribute A, it means that for each value of A, there is exactly one value of B."
      },
      {
        "question": "What are Armstrong’s Axioms in the context of databases?",
        "answer": "Armstrong’s Axioms are a set of rules to infer all the functional dependencies on a relational database. They include the rules of reflexivity, augmentation, transitivity, additivity, pseudotransitivity, and projectivity."
      },
      {
        "question": "What is closure in the context of databases?",
        "answer": "In the context of databases, closure refers to the process of finding out all the possible sets of attributes that a given set of attributes can functionally determine."
      }
    ],
    "mod5": [
      {
        "question": "What is the Transaction Model in Transaction Processing Concepts?",
        "answer": "The Transaction Model is a representation of the changes made to a database within a single logical operation. It ensures data integrity and consistency."
      },
      {
        "question": "What is the significance of Concurrency Control & Recovery in transaction processing?",
        "answer": "Concurrency Control ensures that transactions are executed simultaneously without conflicting with each other, maintaining database consistency. Recovery is the process of bringing the database back to the most recent consistent state after a failure."
      },
      {
        "question": "What are the Desirable Properties of transactions?",
        "answer": "The desirable properties of transactions include Atomicity, Consistency, Isolation, and Durability (ACID properties)."
      },
      {
        "question": "What are Concurrent and Serializable Schedules?",
        "answer": "Concurrent Schedules allow multiple transactions to execute simultaneously improving system throughput. Serializable Schedules ensure the result of concurrently executing transactions is the same as if the transactions were executed serially."
      },
      {
        "question": "What is conflict equivalence and conflict serializability?",
        "answer": "Conflict equivalence refers to two schedules having the same set of conflicting operations with the same order. Conflict serializability is a method to check if a concurrent schedule is equivalent to some serial schedule."
      }
    ]
  },
  "flashcards": {
    "mod1": [
      {
        "question": "What is the Entity Relationship (ER) Model in Database Management Systems?",
        "answer": "ER model is a conceptual representation of data. It includes basic concepts, entity set & attributes, notations, relationships and constraints, cardinality, participation, notations, weak entities, relationships of degree 3."
      },
      {
        "question": "What are the different types of data in a DBMS?",
        "answer": "There are three types of data in a DBMS: structured, semi-structured and unstructured data."
      }
    ],
    "mod2": [
      {
        "question": "What are the two main components of the three schema architecture in DBMS?",
        "answer": "Data Models and Schema are the two main components of the three schema architecture in DBMS."
      },
      {
        "question": "What are the types of Database Languages?",
        "answer": "Database languages can be classified into four types: Data Definition Language, Data Manipulation Language, Data Control Language, and Transaction Control Language."
      }
    ],
    "mod3": [
      {
        "question": "What is the structure of Relational Databases?",
        "answer": "The structure of Relational Databases consists of tables that store data in rows and columns. They also include Integrity Constraints and a process for Synthesizing ER diagram to relational schema."
      },
      {
        "question": "What is deferred database modification?",
        "answer": "Deferred database modification is a technique where changes to a database are not immediately updated, but are held in temporary storage and applied later. It can be either serial schedule or concurrent schedule."
      }
    ],
    "mod4": [
      {
        "question": "What is a NoSQL database?",
        "answer": "A NoSQL database is a non-relational database that allows for storing and retrieving data in a way that doesn't require tabular relations used in relational databases. They are often used in big data and real-time web applications."
      },
      {
        "question": "What are the main characteristics of Key-value DB?",
        "answer": "Key-value databases are highly partitionable and allow horizontal scaling at scales that other types of databases cannot achieve. Example of Key-value DB is Redis."
      }
    ],
    "mod5": [
      {
        "question": "What are the main characteristics of Document DB?",
        "answer": "Document databases pair each key with a complex data structure known as a document. Documents can contain many different key-value pairs, or key-array pairs, or even nested documents. Example of Document DB is MongoDB."
      },
      {
        "question": "What are the main characteristics of Column-Family DB and Graph DB?",
        "answer": "Column-Family databases store data in columns together instead of rows and are optimized for queries over large datasets. Graph databases are used to store information about networks, such as social connections. Examples are Cassandra for Column-Family DB and ArangoDB for Graph DB."
      }
    ]
  }
}