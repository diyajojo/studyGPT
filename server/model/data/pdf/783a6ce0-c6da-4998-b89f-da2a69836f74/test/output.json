{
  "important_topics": {
    "mod3": [
      "SQL data types",
      "Multi-level indices",
      "Triggers",
      "Heap files",
      "SQL queries on single and multiple tables"
    ],
    "mod1": [
      "Cardinality",
      "Data Models and Schema",
      "Participation",
      "ER Model: Basic Concepts",
      "Entity Set & Attributes"
    ],
    "mod4": [
      "Functional Dependency",
      "Algorithms for Checking Lossless Join Properties",
      "Multi-Level-Indices",
      "Idea of Normalization",
      "Closures and their Computation"
    ],
    "mod2": [
      "Important SQL Data Types",
      "Introduction to SQL",
      "Table Definitions and Operations",
      "CREATE operation",
      "Cartesian Product Operations"
    ],
    "mod5": [
      "Concurrent and Serializable Schedules",
      "Conflict Equivalence and Conflict Serializability",
      "System Log",
      "Introduction to NoSQL Databases",
      "Desirable Properties of Transactions"
    ]
  },
  "important_qna": {
    "mod3": [
      {
        "question": "What is SQL DML and what is its purpose?",
        "answer": "SQL DML (Data Manipulation Language) is a part of SQL that provides the ability to query information from the database and to insert tuples into, delete tuples from, and modify tuples in the database. It is used to manage data within schema objects."
      },
      {
        "question": "What is the difference between correlated and non-correlated nested queries?",
        "answer": "Correlated nested queries are those where the inner query depends on the outer query for its values. In contrast, in non-correlated nested queries, the inner query doesn't depend on the outer query and can run independently."
      },
      {
        "question": "What is the concept of physical and logical records in the context of physical data organization?",
        "answer": "Physical and logical records pertain to how data is stored in a system. A physical record is a contiguous block of data that is stored and retrieved as a single unit from a storage device. A logical record, on the other hand, is a collection of related data items treated as a single entity by an application."
      },
      {
        "question": "What are B-Trees and B+Trees in the context of Physical Data Organization?",
        "answer": "B-Trees and B+Trees are types of data structures used in databases for efficient data retrieval. They are tree-based data structures that maintain sorted data and allow for efficient insertion, deletion, and search operations. B+Trees are a variant of B-Trees where all records are stored at the leaf level, providing a more efficient range of queries."
      },
      {
        "question": "What is the difference between fixed-length and variable-length records?",
        "answer": "Fixed-length records are those where every record in the file has exactly the same size in bytes. If different records in the file have different sizes, the file is said to be made up of variable-length records. The choice between fixed and variable length records depends on the nature of the data being stored and specific application requirements."
      }
    ],
    "mod1": [
      {
        "question": "What is a Database Management System (DBMS)?",
        "answer": "A Database Management System (DBMS) is a system software that allows users to create, update, and manage a database. It provides an interface for interacting with data and ensures the data is consistent, secure, and easily accessible."
      },
      {
        "question": "Can you explain the Three-Schema-architecture in database systems?",
        "answer": "The Three-Schema-Architecture is a database architecture which separates the conceptual, external, and internal levels of data organization. The conceptual schema represents the entire database's integrated view. The external schema refers to the view of data for various database users, and the internal schema defines physical storage methods."
      },
      {
        "question": "What are the differences between structured, semi-structured, and unstructured data?",
        "answer": "Structured data is highly organized and easily searchable in relational databases. Semi-structured data is less organized but still has some structure, often found in documents like XML or JSON. Unstructured data lacks a predefined format or organization, examples include text files or social media posts."
      },
      {
        "question": "Could you describe the basic concepts of the ER model?",
        "answer": "The ER model, or Entity-Relationship model, is a conceptual model used to represent relationships between data within databases. It includes entities (objects or concepts that are identifiable), attributes (properties or characteristics of entities), and relationships (associations between entities)."
      },
      {
        "question": "What is the purpose of the Relational Model in a DBMS?",
        "answer": "The Relational Model in a DBMS provides a method of structuring data using relations, which are a set of tuples having the same attributes. It simplifies the process of data manipulation and management with operations like select, project, and join. It forms the basis for SQL, the standard database query language."
      }
    ],
    "mod4": [
      {
        "question": "What are the different anomalies in designing a database?",
        "answer": "The different anomalies in designing a database include insertion, update, and deletion anomalies. These can lead to inconsistencies and redundancy in the database."
      },
      {
        "question": "What is the idea of normalization in database design?",
        "answer": "Normalization is a technique in database design that reduces data redundancy and improves data integrity by organizing fields and tables. It involves dividing a database into two or more tables and defining relationships between the tables."
      },
      {
        "question": "What are the four Normal Forms in database design?",
        "answer": "The four Normal Forms in database design are First Normal Form (1NF), Second Normal Form (2NF), Third Normal Form (3NF), and Boyce Codd Normal Form (BCNF). Each Normal Form has a set of specific rules that tables must adhere to."
      },
      {
        "question": "What does lossless join and dependency preserving decomposition mean?",
        "answer": "Lossless join refers to the property of database decomposition such that the join of decomposed tables is equivalent to the original table. Dependency preserving decomposition means that each functional dependency in the original schema can be inferred from the functional dependencies in the decomposed schemas."
      },
      {
        "question": "What is the purpose of algorithms for checking Lossless Join and Dependency preserving properties?",
        "answer": "The purpose of these algorithms is to ensure the integrity of the data after decomposition. They check if the decomposition is lossless (i.e., no information is lost) and if it preserves the functional dependencies of the original database."
      }
    ],
    "mod2": [
      {
        "question": "What is a relational model and who introduced it?",
        "answer": "A relational model is a type of data model that organizes data into tables or relations. This model was first introduced by Ted Codd in 1970."
      },
      {
        "question": "What is the structure of a relational table in a relational model?",
        "answer": "In a relational model, a table, also known as a relation, consists of rows and columns. Each row, also called a tuple, represents a real-world entity and its related values. The column header is known as an attribute."
      },
      {
        "question": "What are the operations included in Relational Algebra?",
        "answer": "Relational Algebra includes operations such as select, project, Cartesian product, and join operations including Equi-join and Natural join."
      },
      {
        "question": "What is SQL and what are some of its important operations?",
        "answer": "SQL, or Structured Query Language, is a language for managing data held in a relational database management system. Some of its important operations include CREATE, DROP, ALTER, INSERT, DELETE, and UPDATE."
      },
      {
        "question": "What is the process of synthesizing an ER diagram to a relational schema?",
        "answer": "Synthesizing an ER diagram to a relational schema involves converting the entities, relationships, and constraints in the ER diagram into tables, or relations, in the relational schema. This process also includes mapping the attributes of the ER diagram to the columns of the relational schema."
      }
    ],
    "mod5": [
      {
        "question": "What is the significance of concurrency control in Transaction Processing?",
        "answer": "Concurrency control ensures that correct results for concurrent operations are generated, while getting those results as quickly as possible. It is crucial in a multi-user and multi-transaction environment to prevent conflicts and ensure data integrity."
      },
      {
        "question": "What is meant by 'Conflict equivalence and conflict serializability'?",
        "answer": "Conflict equivalence refers to two schedules being conflict equivalent if they have the same set of transactions and the order of conflicting operations is the same in both. Conflict serializability is a method to check if a schedule is serializable by analyzing conflicts among transactions."
      },
      {
        "question": "Can you explain the concept of 'Two-phase locking' in Transaction Processing?",
        "answer": "Two-phase locking is a concurrency control method which guarantees serializability. It has two phases: the expanding phase where locks are acquired and no locks are released, and the shrinking phase where locks are released and no new locks are acquired."
      },
      {
        "question": "What are the main characteristics of a Key-value DB such as Redis?",
        "answer": "Key-value databases like Redis store data as a collection of key-value pairs where the key serves as a unique identifier. These databases are highly scalable and offer high performance. They are best suited for storing session information, user profiles, and preferences."
      },
      {
        "question": "Can you explain the term 'Deferred database modification' in the context of Transaction Processing?",
        "answer": "Deferred database modification is a recovery technique where changes for a transaction are recorded in the local transaction workspace and the actual database modification is deferred till the transaction reaches its commit point. This ensures that in case of a failure, the database can be restored to a consistent state."
      }
    ]
  },
  "flashcards": [
    {
      "question": "What is a Relational Model in databases?",
      "answer": "A Relational Model represents a database as a collection of relations, where a relation is a table with rows and columns. Each row represents a real-world entity and its related values.",
      "module_no": "2"
    },
    {
      "question": "What are the main components of a relational database structure?",
      "answer": "The main components of a relational database structure are: Domain, Tuples (rows), Attributes (Columns), Keys, and Relations (Tables).",
      "module_no": "2"
    },
    {
      "question": "What is Relational Algebra?",
      "answer": "Relational Algebra is a set of operations used to manipulate or query data in a relational database. Common operations include select, project, Cartesian product and join (Equi-join, Natural join).",
      "module_no": "2"
    },
    {
      "question": "What is the purpose of SQL and DDL?",
      "answer": "SQL (Structured Query Language) is used to manage and manipulate relational databases. DDL (Data Definition Language) is a subset of SQL, used for defining and managing tables and other database structures. The operations include CREATE, DROP, ALTER, INSERT, DELETE, UPDATE.",
      "module_no": "2"
    },
    {
      "question": "What are some of the key constraints in a relational model?",
      "answer": "Key constraints in a relational model include primary key, candidate key, secondary/alternate key, composite key, foreign key, and super key. These keys help maintain the integrity and relationships of the data within the database.",
      "module_no": "2"
    },
    {
      "question": "What is a Transaction in Transaction Processing Concepts?",
      "answer": "A Transaction is a unit of work performed within a database management system against a database, treated in a coherent and reliable way independent of other transactions.",
      "module_no": "5"
    },
    {
      "question": "What is the significance of Concurrency Control in Transaction Processing?",
      "answer": "Concurrency Control ensures that correct results for concurrent operations are generated, while getting those results as quickly as possible.",
      "module_no": "5"
    },
    {
      "question": "What is the function of a System Log in Transaction Processing?",
      "answer": "A System Log keeps a record of all transactions and the database modifications made by each transaction, to ensure data integrity and for recovery from failures.",
      "module_no": "5"
    },
    {
      "question": "What are NoSQL Databases?",
      "answer": "NoSQL Databases are a broad class of database management systems that do not use the standard relational database model, offering flexibility, scalability and variety of data models.",
      "module_no": "5"
    },
    {
      "question": "What is a Key-Value Store in the context of NoSQL databases?",
      "answer": "Key-Value Stores are the simplest form of NoSQL databases, storing data as a collection of key-value pairs, offering simplicity, performance, scalability and flexibility.",
      "module_no": "5"
    },
    {
      "question": "What is Normalization in the context of database design?",
      "answer": "Normalization is a process in database design that organizes data to minimize redundancy and dependency. It involves decomposing a database into two or more tables and defining relationships between the tables to eliminate anomalies during data operations.",
      "module_no": "4"
    },
    {
      "question": "What is Functional Dependency in a database?",
      "answer": "Functional Dependency is a constraint between two sets of attributes in a database. It exists when one attribute set uniquely determines another attribute set.",
      "module_no": "4"
    },
    {
      "question": "What is the role of Armstrong's Axioms in Functional Dependencies?",
      "answer": "Armstrong's Axioms provide a set of rules that can be used to infer all the functional dependencies on a relational database. They define the properties of functional dependencies and are used to decompose relations in a database.",
      "module_no": "4"
    },
    {
      "question": "What are the first three Normal Forms in database normalization?",
      "answer": "The first three Normal Forms are: 1NF (First Normal Form), where each cell in a table contains unique and atomic values; 2NF (Second Normal Form), where all non-key attributes are fully functional dependent on the primary key; and 3NF (Third Normal Form), where all non-key attributes are not dependent on other non-key attributes.",
      "module_no": "4"
    },
    {
      "question": "What are Lossless Join and Dependency Preserving Decomposition in databases?",
      "answer": "Lossless Join ensures that the splicing of tables does not result in the loss of information. Dependency Preserving Decomposition ensures that all functional dependencies are preserved in the decomposed tables, allowing all dependencies to be enforced on individual tables.",
      "module_no": "4"
    },
    {
      "question": "What does SQL DML (Data Manipulation Language) provide?",
      "answer": "SQL DML provides the ability to query information from the database and to insert tuples into, delete tuples from, and modify tuples in the database.",
      "module_no": "3"
    },
    {
      "question": "What does the SELECT statement in SQL do?",
      "answer": "The SELECT statement is used in SQL for retrieving information from a database.",
      "module_no": "3"
    },
    {
      "question": "What is the purpose of the DISTINCT keyword in SQL?",
      "answer": "The DISTINCT keyword in SQL is used to eliminate duplicate tuples from the result of an SQL query.",
      "module_no": "3"
    },
    {
      "question": "What is Physical Data Organization?",
      "answer": "Physical Data Organization involves the physical layout of the data records. It includes concepts such as physical and logical records, blocking factor, pinned and unpinned organization, heap files, and indexing.",
      "module_no": "3"
    },
    {
      "question": "What is the purpose of the UNION operator in SQL?",
      "answer": "The UNION operator in SQL is used to combine the result set of two or more SELECT statements, eliminating any duplicate tuples.",
      "module_no": "3"
    },
    {
      "question": "What is a Database Management System (DBMS)?",
      "answer": "A DBMS is a collection of programs that enables users to create and maintain a database. It facilitates processes of defining, constructing, manipulating, and sharing databases among various users and applications.",
      "module_no": "1"
    },
    {
      "question": "What are the characteristics of a Database Approach?",
      "answer": "Characteristics include insulation between programs and data, data abstraction, a self-describing nature, support of multiple views of the data, and sharing of data with multiuser transaction processing.",
      "module_no": "1"
    },
    {
      "question": "Who are the key users of a database?",
      "answer": "Key users of a database include database administrators, database designers, end users, system analysts, application programmers, and maintenance personnel.",
      "module_no": "1"
    },
    {
      "question": "What is the difference between structured, semi-structured and unstructured data?",
      "answer": "Structured data is highly organized and resides in a fixed format. Unstructured data lacks a predefined format or organization, and semi-structured data does not fit into a strict relational structure but has some organizational properties, such as tags or markers.",
      "module_no": "1"
    },
    {
      "question": "What are some advantages of a Database Management System (DBMS)?",
      "answer": "Advantages include controlling redundancy, restricting unauthorized access, and providing persistent storage for program objects, large binary objects, and data structures.",
      "module_no": "1"
    }
  ]
}